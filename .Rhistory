names_glue = "{treatment}_{.value}",
values_from = c("mean", "sd", "n"))
ocean <- read_csv("./data/ocean_meta_data.csv")
## Displays column and column information for the data
dim(ocean)
dim(final)
View(ocean)
View(final)
# Calculate the effect size, ZCOR
full_data <- metafor::escalc(measure = "ZCOR", ri = r, ni = n.rep, data = arnold_data,
var.names = c("Zr", "Zr_v"))  #'ADD YOUR CODE HERE'
# Calculate the effect size, ZCOR
full_InRR <- metafor::escalc(measure = "InRR", ri = r, ni = n.rep, data = full_data,
var.names = c("Zr", "Zr_v"))
help(InRR)
help(escalc)
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", ri = corr_coeff, ni = sample_size, data = full_data, var.names = c("lnRR", "V_lnRR"))
library(tidyverse)
library(pacman)
library(metafor)
library(orchaRd)
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", ri = corr_coeff, ni = sample_size, data = full_data, var.names = c("lnRR", "V_lnRR"))
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", ri = corr_coeff, ni = sample_size, data = full_data, var.names = c("lnRR", "V_lnRR"))
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = corr_coeff, m2i = sample_size, data = full_data, var.names = c("lnRR", "V_lnRR"))
help(escalc)
View(full_data)
View(full_data)
View(final)
View(ocean)
View(OA)
View(summary_data)
## Do some renaming of colnames so they match ocean
final_1 <- final %>% rename("oa.mean" = CO2_mean,
"oa.sd" = CO2_sd,
"oa.n" = CO2_n,
"ctrl.mean" = control_mean,
"ctrl.sd" = control_sd,
"ctrl.n" = control_n)
# Reorder col names based on names in ocean
final_1 <- final_1[names(ocean)]
# Check columns are in same order
colnames(ocean) == colnames(final_1)
# Combine the data
full_data <- rbind(ocean, final_1)
View(full_data)
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i = oa.sd, data = full_data, var.names = c("lnRR", "V_lnRR"))
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i = oa.sd, data = full_data)
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i =  oa.sd, data = full_data)
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i =  oa.sd, n1i = ctrl.n, n2i = oa.n, data = full_data, var.names = c("lnRR", "V_lnRR"))
View(lnRR_data)
View(full_data)
View(OA)
View(clark)
missing <- sum(is.na(full_data))
missing
missing <- sum(is.na(full_data))
missing
data_nn <- data_n[complete.cases(full_data)]
missing <- sum(is.na(full_data))
missing
data_nn <- full_data[complete.cases(full_data)]
missing <- sum(is.na(full_data))
missing
data_nn <- full_data[complete.cases(full_data),]
View(data_nn)
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i =  oa.sd, n1i = ctrl.n, n2i = oa.n, data = data_nn, var.names = c("lnRR", "V_lnRR"))
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i =  oa.sd, n1i = ctrl.n, n2i = oa.n, data = full_data, var.names = c("lnRR", "V_lnRR"))
help(rma.mv)
View(lnRR_data)
MLMA <- metafor::rma.mv(yi = lnRR~1, V = V_lnRR, method = "REML", random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
MLMA <- metafor::rma.mv(yi = lnRR~1, V = V_lnRR,random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
MLMA <- metafor::rma.mv(yi = lnRR~1, V = lnRR_var,random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
MLMA <- metafor::rma.mv(yi = lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
MLMA <- metafor::rma.mv(yi = lnRR~1, V = V_lnRR, random=list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i =  oa.sd, n1i = ctrl.n, n2i = oa.n, data = full_data, var.names = c("lnRR", "V_lnRR"))
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
lnRR_data$residual <- 1:dim(lnRR_data)[1]
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_data)
lnRR_data$residual <- 1:dim(lnRR_data)[1]
lnRR_data
View(lnRR_data)
missing <- sum(is.na(full_data))
missing
full <- full_data[complete.cases(full_data),]
# Calculate the effect size, ROM
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i =  oa.sd, n1i = ctrl.n, n2i = oa.n, data = full, var.names = c("lnRR", "V_lnRR"))
lnRR_data$residual <- 1:dim(lnRR_data)[1]
lnRR_data
lnRR_data$residual <- 1:dim(lnRR_data)[1]
lnRR_data$residual
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_1)
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_1)
MLMA <- metafor::rma.mv(yi = lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full_1)
MLMA <- metafor::rma.mv(yi = lnRR~1, V = V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=lnRR_data$residual)
full <-  lnRR_data %>% mutate(residual = 1:n())
MLMA <- metafor::rma.mv(yi,vi, random = list(~1|species, ~1|Study), method = "REML", test = "t", dfs = "contain", data=lnRR_data$residual)
View(full)
MLMA <- metafor::rma.mv(yi=lnRR,V=V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
View(MLMA)
predict(MLMA, transf = "transf.ztor")
MLMA <- metafor::rma.mv(yi=lnRR,V=V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
library(tidyverse)
library(pacman)
library(metafor)
library(orchaRd)
library(flextable)
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
MLMA <- metafor::rma.mv(yi=lnRR,V=V_lnRR, random = list(~1 | species, ~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA <- metafor::rma.mv(yi=lnRR,V=V_lnRR, random = list(~1 |Species, ~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
predict(MLMA, transf = "transf.ztor")
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE)
# Multi-level meta-regression model
MLMR <- metafor::rma.mv(lnRR ~ full, V = V_lnRR, method = "REML", random = list(~1 |
species, ~1 | study_ID, ~1 | residual), dfs = "contain", test = "t", data = full)
# Multi-level meta-regression model
MLMR <- metafor::rma.mv(lnRR ~ Life.stage, V = V_lnRR, method = "REML", random = list(~1 |
species, ~1 | study_ID, ~1 | residual), dfs = "contain", test = "t", data = full)
# Multi-level meta-regression model
MLMR <- metafor::rma.mv(lnRR ~ Life.stage, V = V_lnRR, method = "REML", random = list(~1 |
Species, ~1 | study_ID, ~1 | residual), dfs = "contain", test = "t", data = full)
# Multi-level meta-regression model
MLMR <- metafor::rma.mv(lnRR ~ Life.stage, V = V_lnRR, method = "REML", random = list(~1 |
Species, ~1 | Study, ~1 | residual), dfs = "contain", test = "t", data = full)
MLMR
# Multi-level meta-regression model
MLMR2 <- metafor::rma.mv(lnRR ~ Life.stage - 1, V = V_lnRR, method = "REML", random = list(~1 |
Species, ~1 | Study, ~1 | residual), dfs = "contain", test = "t", data = full)
MLMR2
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMR, mod = "Life.stage", group = "Study", data = full,
xlab = "Z-Transformed Correlation Coefficient (Zr)", angle = 45)
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMR, mod = "Life.stage", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45)
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMR, mod = "1", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45)
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMR, mod = "1", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45, n="Average.n")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45, n="Average.n")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = 1, group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45, n="Average.n")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = 1, group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45, n="Average.n")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = 1, group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45)
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod ="1", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45)
MLMA <- metafor::rma.mv(yi=lnRR,V=V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
predict(MLMA, transf = "transf.ztor")
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod ="1", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect size", angle = 45)
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod ="1", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect", angle = 45,N="Average.n")
# Make an orchard plot using the model object
Forest <- orchaRd::orchard_plot(MLMA, mod ="1", group = "Study", data = full,
xlab = "Log response ratio (lnRR) effect", angle = 45,N="Average.n")
# Make an orchard plot using the model object
Forest <- orchaRd::orchard_plot(MLMA, mod ="1", group = "Study", data = lnRR_data,
xlab = "Log response ratio (lnRR) effect", angle = 45,N="Average.n")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = 1, group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)
MLMR <- metafor::rma.mv(lnRR ~ Life.stage, V = V_lnRR, method = "REML", random = list( ~1 | Study, ~1 | residual), dfs = "contain", test = "t", data = full)
MLMR
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMR, mod = 1, group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)
MLMA <- metafor::rma.mv(yi=lnRR,V=V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
predict(MLMA, transf = "transf.ztor")
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = 1, group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)
MLMA <- metafor::rma.mv(lnRR~1,V=V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
predict(MLMA, transf = "transf.ztor")
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE,ylim=0.5)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE,ylim=0.1)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE,ylim=2)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE,ylim=5)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "sei",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", atransf = tanh, legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",
level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),
las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=（-10，10）
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=（-10，10）,
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c（-10，10）,ylim=c（1，100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10，10),ylim=c(1，100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE, ylim=0.3)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE,ylim=0.5)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,100),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-10,10),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01),color = "pink", shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE)
help(funnel)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col=pink)
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="pink")
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="blue")
# Lets make a funnel plot to visualize the data in relation to the precision,
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-15,15),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
ggplot(full, aes(y = lnRR, x = Year, size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "log response ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
ggplot(full, aes(y = lnRR, x = Year..online, size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "log response ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
ggplot(full, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "log response ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
ggplot(full, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "log response ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
metareg_time <- rma.mv(lnRR ~ Year, V = V_lnRR, random = list(~1 | Ref, ~1 | residual),
test = "t", dfs = "contain", data = full)
metareg_time <- rma.mv(lnRR ~ Year..online., V = V_lnRR, random = list(~1 | Ref, ~1 | residual),
test = "t", dfs = "contain", data = full)
metareg_time <- rma.mv(lnRR ~ Year..online., V = V_lnRR, random = list(~1 | Study, ~1 | residual),
test = "t", dfs = "contain", data = full)
summary(metareg_time)
meta_time <- rma.mv(lnRR ~ Year..online., V = V_lnRR, random = list(~1 | Study, ~1 | residual),
test = "t", dfs = "contain", data = full)
summary(meta_time)
time <- orchaRd::r2_ml(meta_time)
time
r2_time <- orchaRd::r2_ml(meta_time)
r2_time
rma.mv(lnRR ~ (1 / V_lnRR), V = V_lnRR, random = list(~1 | Study, ~1 | residual), test = "t", dfs = "contain", data = full)
## Calculate and exclude erroneous data
summary_data <-OA %>% group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
## Calculate and exclude erroneous data
summary_data <-OA %>% group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
help("pivot_wider")
## Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1,V=V_lnRR, random = list(~1|Effect.type, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
## Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1,V=V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
help("orchard_plot")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-5,5),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75","gray 95"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray45", "gray 75","gray 95"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray45", "gray 75","gray 105"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray45", "gray 75","darkgray"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75","darkgray"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray25", "gray 65","gray 95"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(pacman)
library(metafor)
library(orchaRd)
library(flextable)
OA <- read_csv("./data/OA_activitydat_20190302_BIOL3207.csv")
clark <- read_csv("./data/clark_paper_data.csv")
## Calculate and exclude erroneous data
summary_data <-OA %>% group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
## Combine the data
total_data <- cbind(clark, summary_data)
## Expand the data
final <- pivot_wider(total_data, names_from = treatment,
names_glue = "{treatment}_{.value}",
values_from = c("mean", "sd", "n"))
ocean <- read_csv("./data/ocean_meta_data.csv")
## Displays the number of row and column of the data
dim(ocean)
dim(final)
## Do some renaming of colnames so they match ocean
final_1 <- final %>% rename("oa.mean" = CO2_mean,
"oa.sd" = CO2_sd,
"oa.n" = CO2_n,
"ctrl.mean" = control_mean,
"ctrl.sd" = control_sd,
"ctrl.n" = control_n)
# Reorder col names based on names in ocean
final_1 <- final_1[names(ocean)]
# Check columns are in same order
colnames(ocean) == colnames(final_1)
# Combine the data
full_data <- rbind(ocean, final_1)
missing <- sum(is.na(full_data))
missing
full_1 <- full_data[complete.cases(full_data),]
## Calculate the log response ratio (lnRR) effect size
lnRR_data <- metafor::escalc(measure = "ROM", m1i = ctrl.mean, m2i = oa.mean, sd1i = ctrl.sd, sd2i =  oa.sd, n1i = ctrl.n, n2i = oa.n, data = full_1, var.names = c("lnRR", "V_lnRR"))
full <-  lnRR_data %>% mutate(residual = 1:n())
## Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1,V=V_lnRR, random = list(~1|Study, ~1|residual), method = "REML", test = "t", dfs = "contain", data=full)
MLMA
## Convert the overall meta-analytic mean back to the correlation coefficient
predict(MLMA, transf = "transf.ztor")
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
## Collate different I2 values
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
## Now let's make a neat table
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")),
as_b("(%)")))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray25", "gray 65","gray 95"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)+ labs(title = "Figure 1: Roaming range differences")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)+ labs(title = "Figure 1: Orchard plot")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray25", "gray 65","gray 95"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")+ labs(title = "Figure 2: Funnel plot")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray25", "gray 65","gray 95"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue") + labs(title = "Figure 2: Funnel plot")
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, mod = "1", group = "Study", data = full,
xlab = "log response ratio (lnRR)", angle = 45)+ labs(title = "Orchard plot")
# Lets make a funnel plot to visualize the data in relation to the precision
metafor::funnel(x = full$lnRR, vi = full$V_lnRR, yaxis = "seinv",xlim=c(-7,7),ylim=c(1,10),level = c(0.1, 0.05, 0.01), shade = c("white", "gray25", "gray 65","gray 95"),las = 1, xlab = "log response ratio (lnRR)", legend = TRUE,col="dark blue")
ggplot(full, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year",
y = "log response ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()+ labs(title = "Time-lag plot")
